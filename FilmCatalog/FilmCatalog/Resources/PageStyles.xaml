<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PasswordBox.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--<Style x:Key="DefaultEndButton" TargetType="Button">
        <Setter Property="Background" Value="#DB4437" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="MrRobot" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Black"
                        BorderThickness="5"
                        CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#ba2e22" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#801209" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
    -->
    <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#b0281c" />
            </Trigger>-->
    <!--<EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#a31a0f" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>-->
    <!--
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="15" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="DefaultStartButton" TargetType="Button">
        <Setter Property="Background" Value="#0F9D58" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="MrRobot" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Black"
                        BorderThickness="5"
                        CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#07733e" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#04572e" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
    -->
    <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#b0281c" />
            </Trigger>-->
    <!--<EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#a31a0f" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>-->
    <!--
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="15" />
            </Style>
        </Style.Resources>
    </Style>-->

    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{x:Null}"
                        BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NavMenuIcon" TargetType="materialDesign:PackIcon">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="DefaultIcon" TargetType="materialDesign:PackIcon">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="NavManuTextBlock" TargetType="TextBlock">
        <Setter Property="Margin" Value="20,10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="DefaultTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Kayak Sans" />
    </Style>

    <Style x:Key="TabControl" TargetType="TabControl">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="TabItem" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        Name="Tab"
                        Width="150"
                        MinHeight="50"
                        Margin="0,1,2,4"
                        Padding="15">
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            ContentSource="Header">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="FontSize" Value="15" />
                                    <Setter Property="TextAlignment" Value="Right" />
                                    <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
                                    <Setter Property="LineHeight" Value="17" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem, AncestorLevel=1}, Path=IsSelected}" Value="True">
                                            <Setter Property="Foreground" Value="White" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem, AncestorLevel=1}, Path=IsSelected}" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource BlackPurpleC}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem, AncestorLevel=1}, Path=IsMouseOver}" Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem, AncestorLevel=1}, Path=IsSelected}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="White" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}, Path=TabStripPlacement}" Value="Top">
                                            <Setter Property="TextAlignment" Value="Center" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Tab" Property="Background" Value="{DynamicResource PurpleC}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Tab" Property="Background" Value="{DynamicResource BlackGrayC}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Tab" Property="Background" Value="{DynamicResource PurpleHoverC}" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl, AncestorLevel=1}, Path=TabStripPlacement}" Value="Top">
                            <Setter TargetName="Tab" Property="Width" Value="Auto" />
                            <Setter TargetName="Tab" Property="Margin" Value="4,0,2,2" />
                            <Setter TargetName="Tab" Property="Padding" Value="15,10" />
                            <Setter TargetName="Tab" Property="MinHeight" Value="0" />
                            <Setter TargetName="Tab" Property="MinWidth" Value="100" />
                            <Setter TargetName="ContentSite" Property="HorizontalAlignment" Value="Center" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="AuthorizationTextBox"
        BasedOn="{StaticResource MaterialDesignTextBox}"
        TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="CaretBrush" Value="{DynamicResource PurpleC}" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PurpleC}" />
        <Setter Property="FontFamily" Value="Kayak Sans" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="SelectionBrush" Value="{DynamicResource PurpleC}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSuccessd}" Value="True">
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PurpleC}" />
                <Setter Property="BorderBrush" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSuccessd}" Value="False">
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Red" />
                <Setter Property="BorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="AuthorizationPasswordBox"
        BasedOn="{StaticResource MaterialDesignPasswordBox}"
        TargetType="PasswordBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="materialDesign:HintAssist.Hint" Value="*****************************" />
        <Setter Property="CaretBrush" Value="{DynamicResource PurpleC}" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PurpleC}" />
        <Setter Property="FontFamily" Value="Kayak Sans" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="SelectionBrush" Value="{DynamicResource PurpleC}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSuccessd}" Value="True">
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PurpleC}" />
                <Setter Property="BorderBrush" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSuccessd}" Value="False">
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Red" />
                <Setter Property="BorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AuthorizationErrorLabel" TargetType="Label">
        <Setter Property="Margin" Value="0, 0, 0, 10" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="FontFamily" Value="Kayak Sans" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSuccessd}" Value="True">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSuccessd}" Value="False">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>